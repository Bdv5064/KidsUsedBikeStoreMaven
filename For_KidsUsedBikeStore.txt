-- SQL Code for KidsUsedBikeStore Database

-- Use the statement below to discard a database that was already created
-- DROP DATABASE KidsUsedBikeStore;

-- Un-comment the statement below to first create the KidsUsedBikeStore database
CREATE DATABASE KidsUsedBikeStore;
USE KidsUsedBikeStore;

-- Drop the existing BikeInventory table if it exists
DROP TABLE IF EXISTS BikeInventory;


-- Create the BikeInventory table
CREATE TABLE IF NOT EXISTS BikeInventory (
    BikeID INT PRIMARY KEY AUTO_INCREMENT,
    BikeName VARCHAR(255),
    BikeCategory VARCHAR(255),
    Price DECIMAL(10, 2)
);


-- Optional: Insert sample data into BikeInventory
INSERT INTO BikeInventory (BikeName, BikeCategory, Price) VALUES
    ('Trailcraft', 'MOUNTAIN_BIKE', 149.99),
    ('Marin', 'ROAD_BIKE', 129.99),
    ('AVASTA', 'BMX_BIKE', 89.99),
    ('Firmstrong', 'CRUISER_BIKE', 109.99);


-- Create CustomerDetails table
CREATE TABLE IF NOT EXISTS CustomerDetails (
    CustID INT PRIMARY KEY AUTO_INCREMENT,
    FName VARCHAR(255),
    LName VARCHAR(255),
    EMail VARCHAR(255),
    Phone VARCHAR(255),
    Address VARCHAR(255)
);


-- Optional: Insert sample data into CustomerDetails
-- Note: If you only want to insert one customer's sample data, then end the line with a ; not a , (or you will get an error)
-- INSERT INTO CustomerDetails (FName, LName, EMail, Phone, Address) VALUES
    -- ('John', 'Doe', 'john.doe@example.com', '123-456-7890', '123 Main St');
    -- ('Jane', 'Smith', 'jane.smith@example.com', '987-654-3210', '456 Oak St');


-- Create Orders table with foreign key references
CREATE TABLE IF NOT EXISTS Orders (
    OrderID INT PRIMARY KEY AUTO_INCREMENT,
    ProductID INT,
    CustID INT,
    DateOfPurchase DATE,
    CustomerFirstName VARCHAR(255),
    CustomerLastName VARCHAR(255),
    FOREIGN KEY (CustID) REFERENCES CustomerDetails(CustID),
    FOREIGN KEY (ProductID) REFERENCES BikeInventory(BikeID)
);

-- Insert sample data into Orders
-- INSERT INTO Orders (ProductID, CustID, DateOfPurchase, CustomerFirstName, CustomerLastName) VALUES
    -- (1, 1, '2023-11-22', 'John', 'Doe');
    -- (2, 2, '2023-11-23', 'Jane', 'Smith');


-- Create OrderDetails table with foreign key references
CREATE TABLE IF NOT EXISTS OrderDetails (
    OrderID INT PRIMARY KEY AUTO_INCREMENT,
    ProductID INT,
    CustID INT,
    DateOfPurchase DATE,
    ProductName VARCHAR(255),
    ProductPrice DECIMAL(10, 2),
    Quantity INT,
    TotalPrice DECIMAL(10, 2),
    PaymentAmount DECIMAL(10, 2),
    RefundAmount DECIMAL(10, 2),
    TransactionHash VARCHAR(255),
    FOREIGN KEY (CustID) REFERENCES CustomerDetails(CustID)
);

-- Insert sample data into OrderDetails
-- INSERT INTO OrderDetails (ProductID, CustID, DateOfPurchase, ProductName, ProductPrice, Quantity, TotalPrice, PaymentAmount, RefundAmount, TransactionHash) VALUES
    -- (1, 1, '2023-11-22', 'Trailcraft', 149.99, 1, 149.99, 150.00, 0.01, 'transaction_hash_1');
    -- (2, 2, '2023-11-23', 'Marin', 129.99, 2, 259.98, 260.00, 0.02, 'transaction_hash_2');


-- Check data in BikeInventory
SELECT * FROM BikeInventory;

-- Check data in CustomerDetails
SELECT * FROM CustomerDetails;

-- Check data in Orders
SELECT * FROM Orders;

-- Check data in OrderDetails
SELECT * FROM OrderDetails;




